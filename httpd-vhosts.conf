# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# Qlik Sense Reverse Proxy configuration for header authentication
#
# Qlik Sense configuration needed:
# - Create a new virtual proxy with header authentication static user directory (use QVUSER as header name)
# - Add reverse proxy name and IP address to whitelist of virtual proxy

#Put IP address of reverse proxy as LOCAL_ADDR
#Put IP address of Qlik Sense server as REMOTE_ADDR
#Put your vitrual proxy prefix as VIRTUAL_PROXY
#Put name of the HTTP header with the user name in USER_HEADER_FIELD

Define LOCAL_ADDR 10.88.148.228
Define REMOTE_ADDR 10.76.137.17 
Define VIRTUAL_PROXY header
Define USER_HEADER_FIELD QVUSER

<VirtualHost *:9090>
	ServerAdmin name@qlik.com
	DocumentRoot "/Library/WebServer/Documents"
	ServerName ${LOCAL_ADDR}:9090
	ServerAlias reverse-proxy.rdlund.qliktech.com
#	ErrorLog "/var/log/apache2/reverse-proxy.rdlund.qliktech.com-error.log"
#	CustomLog "/var/log/apache2/reverse-proxy.rdlund.qliktech.com-access.log" common

	ProxyRequests Off
	ProxyPreserveHost On
	KeepAlive On

	RewriteEngine On

	#Add header to all requests with the user. 
        RewriteRule .* - [E=PROXY_USER:%{LA-U:REMOTE_USER}]
        RequestHeader set ${USER_HEADER_FIELD} %{PROXY_USER}e

	# If it is a websocket request forward as websocket traffic
        RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]
        RewriteCond %{HTTP:CONNECTION} ^Upgrade$ [NC]
        RewriteRule .* ws://${REMOTE_ADDR}%{REQUEST_URI} [P]

	<Proxy *>
		Order deny,allow
		Allow from all
	</Proxy>

	#Protect location with appropriate authentication
	<Location /${VIRTUAL_PROXY}>
		ProxyPass http://${REMOTE_ADDR}/${VIRTUAL_PROXY} connectiontimeout=5 timeout=300
		ProxyPassReverse http://${REMOTE_ADDR}/${VIRTUAL_PROXY}
		AuthType basic
    		AuthName "private area"
    		Require            valid-user
		AuthBasicProvider file
        	AuthUserFile  /etc/apache2/extra/users
	</Location>

</VirtualHost>
